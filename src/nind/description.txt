(subject ~/nind/description)
(style http://bytefla.me/style.css)
(title Nind Is Nonsense, Distilled)
(author Tim Hewitt)
(note This page currently under construction!)
(p
  The search for the ideal programming language has led many a programmer on 
  wild goose chases. Some realize that there is no ideal language for every
  purpose. Others never find a language they're happy with. A few endeavor to 
  create their own. Even fewer finish. Aside from being distilled nonsense, 
  nind is not a programming language! It is a family of languages, much as its
  predecessor lisp or lisp-like cousins. Nind's focus is describing an extention
  of the basic lisp constructs that allow for strong algebraic typing. What 
  these types are and how they are implemented is completely outside the scope 
  of nind. One may also notice that nind shares ideas from haskell, whose 
  algebraic type system is quite well-formed and robust while remaining purely 
  functional.)
(section Why
  (p
    Because I keep reading about these awesome things like algebraic datatypes
    and s-expressions and I want to merge them into an awesome language 
    family.))
(section Generic Nind
  (p
    Note that any code examples are going to be in generic nind. This is a nind
    form that requires no lexing beyond turning text into lists of symbols.
    Generic nind also assumes that any free symbols are bound in an enclosing 
    prelude.))
(section S-Expressions
  (p
    S-expressions are the core textual representation of any lisp derivitive,
    producing a nested list of atoms which we may evaluate.))
(section Kappa Calculus
  (p
    Kappa calculus \(which has nothing to do with the integral or differential 
    calculus you may be familiar with\) is a formal system for creating 
    first-order functions. It is not as extensible as the lambda calculus, which
    can derive functions that take other functions as arguments. This makes some
    aspects of a kappa-calculus language simpler, therefore, the first foray 
    into a nind will be to derive a usable, strongly-typed kaapa calculus.))
